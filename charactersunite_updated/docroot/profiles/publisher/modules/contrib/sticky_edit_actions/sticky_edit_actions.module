<?php

/**
 * Implements hook_form_alter().
 */
function sticky_edit_actions_form_alter(&$form, &$form_state, $form_id) {
  $module_filter_state = module_exists('module_filter');
  $admin_path_state = path_is_admin($current_path = current_path());

  // Contextual forms pose a problem.  Sticky Edit Actions relies on JQuery 
  // Waypoints, which don't take account of the element's context.  Waypoints
  // will look at the element as it's represented in the whole viewport--not
  // just how it appears within a containing DIV like a modal window.
  // Consequently, for modal windows and the like, we'll let them remain static.
  $is_ajax = isset($form_state['ajax']) ? $form_state['ajax'] : FALSE;

  if ($admin_path_state && !($module_filter_state && $current_path === 'admin/modules') && !$is_ajax) {
    $path = drupal_get_path('module', 'sticky_edit_actions');
    // Add CSS.
    $form['#attached']['css'][] = $path . '/css/sticky-edit-actions.css';
    // Add JS.
    $form['#attached']['js'][$path . '/js/waypoints.min.js'] = array(
      'type' => 'file',
      'weight' => 99,
    );
    $form['#attached']['js'][$path . '/js/waypoints-sticky.min.js'] = array(
      'type' => 'file',
      'weight' => 100,
    );
    $form['#attached']['js'][$path . '/js/sticky-edit-actions.js'] = array(
      'type' => 'file',
      'weight' => 101,
    );
    // Add class.
    $form['actions']['#attributes']['class'][] = 'my-sticky-element';
  }
}

/**
 * Implements hook_media_edit_multiple_form_alter().
 *
 * This is a hack since multiform doesn't use real buttons. The issue
 * should really be fixed there. @see https://drupal.org/node/2065525
 */
function sticky_edit_actions_media_edit_multiple_form_alter(&$form) {
  $form['actions'] = $form['buttons'];
  $form['actions']['#type'] = 'actions';
  unset($form['buttons']);

  $form_state = array();

  sticky_edit_actions_form_alter($form, $form_state, 'media_edit_multiple_form');
}

/**
 * Implements hook_media_browser_fake_buttons_alter().
 */
function sticky_edit_actions_media_browser_fake_buttons_alter(&$fake_buttons) {

  $matches = array();
  preg_match('/<div.*?class=["|\'](.*?)["|\'].*?>/i', $fake_buttons, $matches);

  if(count($matches) > 1 ) {
    $old_class = $matches[1];
    $new_class = $old_class . ' my-sticky-element';
    $fake_buttons = str_replace($old_class, $new_class, $fake_buttons);
  }
}
