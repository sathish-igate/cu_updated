<?php

/**
 * @file
 * Track actions taken on a node.
 */

/**
 * Implements hook_menu().
 */
function entity_tracker_menu() {
  $items = array();

  $items['admin/config/content/entity_tracker'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Entity tracker',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('entity_tracker_configuration_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'entity_tracker.admin.inc',
  );
  $items['admin/reports/entity_tracker'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Entity tracker report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('entity_tracker_report_form'),
    'access arguments' => array('view entity tracker'),
    'file' => 'entity_tracker.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function entity_tracker_permission() {
  return array(
    'view entity tracker' => array(
      'title' => t('View Entity Tracker'),
      'description' => t('View the report generated by Entity Tracker.'),
    ),
  );
}

/**
 * Implements hook_entity_insert().
 */
function entity_tracker_entity_insert($entity, $type) {
  if (entity_tracker_should_record_action($type)) {
    list($id, $vid, $bundle) = entity_extract_ids($type, $entity);
    entity_tracker_record_action($entity, $id, $vid, 'created');
  }
}

/**
 * Implements hook_entity_update().
 */
function entity_tracker_entity_update($entity, $type) {
  if (entity_tracker_should_record_action($type)) {
    list($id, $vid, $bundle) = entity_extract_ids($type, $entity);

    if (isset($entity->revision) && !empty($entity->revision)) {
      entity_tracker_record_action($entity, $id, $vid, 'created_revision');
    }
    else {
      entity_tracker_record_action($entity, $id, $vid, 'modified');
    }
  }
}

/**
 * Implements hook_entity_delete().
 */
function entity_tracker_entity_delete($entity, $type) {
  if (entity_tracker_should_record_action($type)) {
    list($id, $vid, $bundle) = entity_extract_ids($type, $entity);
    entity_tracker_record_action($entity, $id, $vid, 'deleted');
  }
}

/**
 * A utility function for determining if we should record this action.
 */
function entity_tracker_should_record_action($type) {
  global $user;

  // At present we're just tracking nodes.
  if ($type !== 'node') {
    return FALSE;
  }

  $roles = variable_get('entity_tracker_roles', array());
  $roles = array_values(array_filter($roles));

  $user_roles = array_keys($user->roles);
  foreach ($user_roles as $role_id) {
    if (in_array($role_id, $roles)) {
      return TRUE;
    }
  }

  return FALSE;
}

/**
 * A utility function for storing an Entity Tracker record.
 */
function entity_tracker_record_action($entity, $entity_id, $revision_id, $action) {
  global $user;

  $entity_tracker_id = db_insert('entity_tracker')
    ->fields(array(
      'entity_id' => $entity_id,
      'vid' => $revision_id,
      'uid' => $user->uid,
      'title' => $entity->title,
      'action' => $action,
      'timestamp' => REQUEST_TIME,
    ))
    ->execute();

  return $entity_tracker_id;
}
